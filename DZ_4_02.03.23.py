# Даны два неупорядоченных набора целых чисел (может быть, с повторениями).
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n - кол-во элементов первого множества.
# m - кол-во элементов второго множества. Затем пользователь вводит сами элементы множеств.
import random

my_list_1 = [int(input('Enter numbers of first array: ')) for _ in range(int(input('Length of first array: ')))]
my_list_2 = [int(input('Enter numbers of second array: ')) for _ in range(int(input('Length of second array: ')))]
print(f'Result: {sorted(set(my_list_1).intersection(set(my_list_2)))}')

# В фермерском хозяйстве в Карелии выращивают чернику. Она растет на круглой грядке,
# причем кусты высажены только по окружности. Таким образом, у каждого куста есть ровно два соседних.
# Всего на грядке растет N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло
# различное число ягод – на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники.
# Эта система состоит из управляющего модуля и нескольких собирающих модулей.
# Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом,
# собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход
# собирающий модуль, находясь перед некоторым кустом заданной во входном файле грядки.

bushes = [random.randint(5, 20) for _ in range(int(input('Enter quantity of bushes: ')))]
# print(bushes) # для наглядности раскомментить
number_of_bush = None
max_berries = sum(bushes[0:1]) + bushes[-1]
for i in range(1, len(bushes)):
    temp = sum(bushes[i-1:i+1]) if i < len(bushes)-1 else sum(bushes[i-1:i]) + bushes[0]
    if temp > max_berries:
        max_berries = temp
        number_of_bush = i
print(f'Максимально возможно собрать {max_berries} ягод, находясь перед кустом {number_of_bush + 1}!')
# p.s. кусты считаю с 1 :-)
