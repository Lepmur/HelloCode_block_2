list_1 = []
list_2 = list()
list_3 = [1, 2, 3, 8]

# print(list_3)
# print(*list_3)

# for i in list_3:
#     print(i)

# print(len(list_3))             # вывод размера списка

# print(list_3[-1])              # вывод последнего элемена массива

# list_3.append(8)               # добавление элемента в конец списка

# print(list_3.pop())            # удаляет и возвращает последний элемент списка или его (индекс) в аргументе

# list_3.insert(2, 11)            # вставит 11 в позицию 2

# print(list_3[2:])                # выведет все элементы списка начиная со 2 индекса до конца

# print(list_3[len(list_3)-2:])    # выведет все элементы списка начиная со второго с конца индекса до конца

# print(list_3[0:len(list_3):6])   # от начала до конца с шагом 6, или [::6]

# ==============================КОРТЕЖИ======================================

# t = ()
# print(type(t))
# d = (1, 5, 3, )                   # ", " в конце обязательно

# print(list_3)
# print(type(list_3))
# v = tuple(list_3)                 # конвертирует список в кортеж
# print(v)
# print(type(v))
# a, b, c, d = v
# print(a, b, c, d)                   # множественное присваивание

# ============================СЛОВАРИ====================================

# d = {}
# d_1 = dict()
#
# d['q'] = 'qwerty'
# print(d)
# d[1] = 'qweqwe'
# print(d[1])
#
# del d['q']                                     # удаление значения по ключу
#
# for item in d:
#     print(item)                                # будет выводить ключи
#     print('{}:{}'.format(item, d[item]))       # будет выводить ключ : значение
#
# for (k, v) in d.items():                       # так же будет выводить ключ значение
#     print(k, v)
#
# print(d.items())                               # выведет список из кортежей [(ключ, значение), [(ключ, значение)], ...)

# =============================МНОЖЕСТВА=================================

# colors = {'red', 'green', 'blue'}        # множество содержит только уникальные значения
# colors_1 = set()
#
# colors.add('gray')                       # добавит 'gray' в случайное место
# colors.add('red')                        # ничего не добавит поскольку 'red' уже имеется
#
# colors.remove('red')                     # удалит значение 'red'
# colors.discard('red')                    # удалит значение 'red' если оно имеется, иначе пропустит строку кода
#
# colors.clear()                           # удалит все значения, вернёт set()
#
# a = {1, 2, 3, 4, 5, 6}
# b = {5, 6, 7, 8, 9}
# c = a.copy()                             # копирует А в С
# u = a.union(b)                           # совмещает А и B, уникальные значения
# i = a.intersection(b)                    # присвоит только пересечение
# k = a.difference(b)                      # присвоит только уникальные значения в А, исключая В
# l = b.difference(a)                      # присвоит только уникальные значения в B, исключая A
# q = a.union(b).difference(a.intersection(b))  # объединит А и В, и вычтет из него пересечение А и В
#
# f = frozenset(a)                         # присвоит множеству F множество А и сделает его неизменяемым
# print(*f)                                # выводит множество в несортированном случайном виде (* - без синтаксиса)

# =================================List_Comprehension========================================

list_1 = [i for i in range(5)]    # заполнит список значениями от 0 до 4
print(list_1)

list_2 = [i for i in range(1, 101) if i % 2 == 0]      # заполнит список четными значениями от 1 до 101
print(list_2)

list_1 = [(i, i*i) for i in range(1, 101) if i % 2 == 0]   # заполнит список кортежами из четных чисел и их квадратов
print(*list_1)

list_2 = [i * 2 for i in range(10) if i % 2 != 0]   # заполгнит список нечетными числами умноженными на 2
print(list_2)
